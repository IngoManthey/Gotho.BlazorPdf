@inherits ComponentBase

<div class="blazorpdf-container">
    <div role="toolbar" class="blazorpdf-toolbar">
        @*Toggle Thumbnail*@
        <div class="blazorpdf-toolbar__item">
            <button class="blazorpdf-toolbar__item-button" disabled="@Loading" @onclick="ToggleThumbnails"
                    aria-label="Toggle Thumbnails">
                <span>
                    <ThumbnailsIcon/>
                </span>
            </button>
        </div>

        @*Previous Page*@
        <div class="blazorpdf-toolbar__item">
            <button class="blazorpdf-toolbar__item-button" disabled="@Loading" @onclick="PreviousPageAsync"
                    aria-label="Previous Page">
                <span>
                    <PreviousPageIcon/>
                </span>
            </button>
        </div>

        @*Next Page*@
        <div class="blazorpdf-toolbar__item">
            <button class="blazorpdf-toolbar__item-button" disabled="@Loading" @onclick="NextPageAsync"
                    aria-label="Next Page">
                <span>
                    <NextPageIcon/>
                </span>
            </button>
        </div>

        @*Current Page*@
        <div class="blazorpdf-toolbar__item">
            <input type="number" value="@PdfFile.Paging.CurrentPage" @onchange="PageChanged"/>
        </div>

        @* of *@
        <div class="blazorpdf-toolbar__item">
            <p>of</p>
        </div>

        @*Page Total*@
        <div class="blazorpdf-toolbar__item">
            <p>@PdfFile.Paging.TotalPages</p>
        </div>

        <div class="blazorpdf-toolbar__spacer"></div>

        @*Zoom Out*@
        <div class="blazorpdf-toolbar__item">
            <button class="blazorpdf-toolbar__item-button" @onclick="ZoomOutAsync" aria-label="Zoom Out">
                <span>
                    <ZoomOutIcon/>
                </span>
            </button>
        </div>

        @*Current Zoom*@
        <div class="blazorpdf-toolbar__item">
            <span class="blazorpdf-toolbar__item-chip">@PdfFile.Zooming.GetZoomPercentageString()</span>
        </div>

        @*Zoom In*@
        <div class="blazorpdf-toolbar__item">
            <button class="blazorpdf-toolbar__item-button" @onclick="ZoomInAsync" aria-label="Zoom In">
                <span>
                    <ZoomInIcon/>
                </span>
            </button>
        </div>

        <div class="blazorpdf-toolbar__spacer"></div>

        @*Menu*@
        <div class="blazorpdf-toolbar__item">
            <div class="blazorpdf-toolbar__menu-wrapper">
                <input type="checkbox" id="menu-toggle" hidden>
                <label for="menu-toggle" class="blazorpdf-toolbar__menu-trigger-button">
                  <span>
                      <MenuIcon/>
                  </span>
                </label>
                <div class="blazorpdf-toolbar__menu">
                    <!-- Clicking the overlay closes the menu -->
                    <label for="menu-toggle" class="blazorpdf-toolbar__menu-overlay"></label>
                    <div class="blazorpdf-toolbar__menu-content">
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item" @onclick="RotateClockwiseAsync">
                            <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                <RotateCWIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Rotate Clockwise</span>
                        </button>
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item"
                                @onclick="RotateCounterclockwiseAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <RotateCCWIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Rotate Counterclockwise</span>
                        </button>
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item"
                                @onclick="SwitchOrientationAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <SwitchOrientationIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Switch Orientation</span>
                        </button>
                        <hr class="blazorpdf-toolbar__menu-divider">
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item" @onclick="FirstPageAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <FirstPageIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">First Page</span>
                        </button>
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item" @onclick="LastPageAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <LastPageIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Last Page</span>
                        </button>
                        <hr class="blazorpdf-toolbar__menu-divider">
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item" @onclick="ResetZoomAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <ZoomResetIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Reset Zoom</span>
                        </button>
                        <hr class="blazorpdf-toolbar__menu-divider">
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item" @onclick="PrintDocumentAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <PrintIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Print Document</span>
                        </button>
                        <button type="button" class="blazorpdf-toolbar__menu-menu-item"
                                @onclick="DownloadDocumentAsync">
                             <span class="blazorpdf-toolbar__menu-menu-item-icon">
                                 <DownloadIcon/>
                            </span>
                            <span class="blazorpdf-toolbar__menu-menu-item-text">Download Document</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="blazorpdf-pdf">
        @if (Error is not null)
        {
            <div class="blazorpdf-pdf__error">
                <div class="blazorpdf-pdf__error-content">
                    @if (Error.ErrorType == PdfErrorType.PasswordRequired)
                    {
                        <h1>âš  Password Required</h1>
                        <div class="blazorpdf-pdf__input">
                            <input type="text" @bind="PdfPassword" id="pdfPassword" class="blazorpdf-pdf__input-field"
                                   placeholder="Password">
                            <span
                                class="blazorpdf-pdf__input-help">Please enter the password for the PDF document</span>
                        </div>
                        <button class="blazorpdf-pdf__error-submit" type="button" @onclick="ReloadPdfAsync">Submit
                        </button>
                    }
                </div>
            </div>
        }

        <div class="@(Error is not null ? "blazorpdf-d-none" : "")" style="margin: auto">
            <div id="@($"{PdfFile.Id}_thumbs")"
                 class="@(_showThumbnails ? "blazorpdf-pdf__thumbnails" : "blazorpdf-pdf__thumbnails blazorpdf-d-none")"></div>
            <div class="blazorpdf-pdf__pdf-container">
                @if (SinglePageMode)
                {
                    <canvas @ref="Element" id="@PdfFile.Id"></canvas>
                    <div id="@($"{PdfFile.Id}_text")" class="textLayer"></div>
                }
                else
                {
                    <div id="@PdfFile.Id" class="blazorpdf__scroll" style="height: 65vh"></div>
                }
            </div>
        </div>
    </div>
</div>

@code {

    private bool _showThumbnails = true;

    private bool InputDisabled()
    {
        return Loading || Error is not null;
    }

    private void ToggleThumbnails()
    {
        _showThumbnails = !_showThumbnails;
    }

    private async Task PageChanged(ChangeEventArgs obj)
    {
        if (int.TryParse(obj.Value as string, out var result))
        {
            await PageNumberChanged(result);
        }
    }

}
